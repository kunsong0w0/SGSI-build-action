# This is a basic workflow to help you get started with Actions

name: SGSI_Build

on:
  watch:
    types: [started]
    
env:              
  ROM_URL: 'https://airportal-cn-south.oss-cn-shenzhen.aliyuncs.com/436443/fSPL0wadlg/1/Flyme-AB-9-20190702-ErfanGSI.zip?security-token=CAIS9QJ1q6Ft5B2yfSjIr5bDc83y2ohO2pLSVnfSjjMfRvle2omSqjz2IHFPfHJgAeAatf0%2Bn2hU6fwTlqBaSoV9QlbYZM8oPU3OPK3mMeT7oMWQweEuW%2FTHcDHh1neZsebWZ%2BLmNoO%2FHt6md1HDkAJq3LL%2Bbk%2FMdle5MJqP%2B9YFCdMMRVucbCFaI91UKwB%2Bs61%2FMmDKZ9mgLjnggGfbEDBE2GxGhHh49L60z%2BCF9xPalyea8OIOoJnrKZXWL6siNZxkAdCux740JOiT2S9K8x9Q6K5yyadCvCzAo82dRAUKvUnaaKiutr8ODRdQaqQgFrVf1pz1nuYqgevOjY%2F66g4%2FRIMyCX6FAtn7no2dSLrvbI9kV86iZyyRiorfZ8Su6l95OylLDm4QJYp9cE0XIAc3VzTXJpWg%2FF33eQq5Q8CHqvpnisIunw24oYHTdgPXH%2BrDgDxrM5s9fl4uMAUNwWvif6kJfgpBaVp7AKyPSoF%2BfO7pR3NPS9q4GoABBRrbQHK8MwVIVmG798zlVcKVhzxKZAOWwhvzWUsGgTI%2F1avrSE3vFXtE6QRMgsPN9y2tbS%2FuHTxLWnb36CpDPkDHAzgh5fgcun2Sijrx5O9UsOgTZd5FL0pSNhpHMUjrgTynSm3E2Dxr7DEa28ya%2B6yVct2OdBAInMlPlTORCLw%3D&OSSAccessKeyId=STS.NUv8wF7WomP9TQcj3JJvr5L9H&Expires=1633777156&Signature=wISasAuJe88gEiuyvpehdjOyByg%3D'
  ZIP_NAME: 'update.zip'
  OS_TYPE: 'Flyme'
  BUILD_TYPE: 'ab'
  REPACK_NAME: 'SGSI.zip'
  VERSION: '11'
  upload_action-gh-release: 'true'
  SETUP: 'true'
  
jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
       - name: Checkout
         uses: actions/checkout@main
       
       - name: Clean Up
         run: |       
           docker rmi `docker images -q`
           sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d
           sudo -E apt-get -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* mysql* php*
           sudo -E apt-get update
           sudo -E apt-get -y autoremove --purge
           sudo -E apt-get clean
           df -h
           
       - name: Setting up the SPICES
         run: |
            sudo apt-get install -y git wget git zip unzip curl axel

       - name: Cloning...
         run: |
             git clone --recurse-submodules https://github.com/xiaoxindada/SGSI-build-tool.git -b 12 $GITHUB_WORKSPACE/SGSI-build-tool
           
       - name: Download zip...
         run: |
            cd $GITHUB_WORKSPACE/SGSI-build-tool
            mkdir ./tmp
            wget -U "Mozilla/5.0" $ROM_URL -O "$GITHUB_WORKSPACE/SGSI-build-tool/tmp/$ZIP_NAME"
            echo "zip_file: $(ls "$GITHUB_WORKSPACE/SGSI-build-tool/tmp/")"
            
       - name: Setup Tool Utils...
         if: env.SETUP == 'true'
         run: |
            sudo sed -i 's/USE_MIRROR_FOR_PIP\=true/USE_MIRROR_FOR_PIP\=false/' $GITHUB_WORKSPACE/SGSI-build-tool/setup.sh
            sudo bash $GITHUB_WORKSPACE/SGSI-build-tool/setup.sh
            # sudo apt-get -y --purge remove "adoptopenjdk-11-hotspot"
            java -version
            
       - name: Building AB DEVICES SGSI...
         if: env.BUILD_TYPE == 'AB' || env.BUILD_TYPE == 'ab'
         run: |
            sudo bash $GITHUB_WORKSPACE/SGSI-build-tool/make.sh --AB $OS_TYPE $ZIP_NAME --fix-bug

       - name: Building A-only DEVICES SGSI...
         if: env.BUILD_TYPE == 'a-only'
         run: |
            sudo bash $GITHUB_WORKSPACE/SGSI-build-tool/make.sh --a-only $OS_TYPE $ZIP_NAME --fix-bug     

       - name: Repack output file ...
         run: |            
             cd $GITHUB_WORKSPACE/SGSI-build-tool
             pwd
             mkdir -p upload
             zip -r $REPACK_NAME ./SGSI/*
             if [[ $(du -sb "$REPACK_NAME" | awk '{print $1}') -gt 2097152000 ]];then
                 echo -e "split packaging..."
                 tar -cpzf - "$REPACK_NAME" | split -d -b 1024m - "upload/$REPACK_NAME"
             else
                 mv $REPACK_NAME upload/$REPACK_NAME
             fi
             ls "upload"

       - name: Upload SGSI to action-gh-release...
         if: env.upload_action-gh-release == 'true'
         uses: ncipollo/release-action@v1.8.6
         with:
           artifacts: ${{ github.workspace }}/SGSI-build-tool/upload/*
           name: xiaoxinSGSI-${{ env.OS_TYPE }}-${{ env.BUILD_TYPE }}-Android${{ env.VERSION }}-unpack
           tag: xiaoxinSGSI-${{ env.OS_TYPE }}-${{ env.BUILD_TYPE }}-Android${{ env.VERSION }}-${{ github.run_number }}
           bodyFile: "${{ github.workspace }}/SGSI-build-tool/SGSI/build_info.txt"
           token: ${{ secrets.GITHUB_TOKEN }}
